services:
  - name: ssh-proxy-server-api-internal
    addr: ":8888"
    admission: ssh-proxy-allowed-hosts
    handler:
      type: tcp
      chain: ssh-proxy-server-api-internal
    listener:
      type: tcp
  - name: ssh-proxy-server-api-external
    addr: ":%SSH_PROXY_SERVER_API_PORT%"
    admission: ssh-proxy-allowed-hosts
    hosts: well-known-hosts
    handler:
      type: forward
      metadata:
        sniffing: true
        postUp:
          - "echo 'SSH Proxy Server API is available at: %SSH_PROXY_SERVER_ID%.ssh-proxy.internal:%SSH_PROXY_SERVER_API_PORT%'"
    listener:
      type: tls
    forwarder:
      nodes:
        - name: ssh-registry-api-secure
          addr: "%SSH_PROXY_SERVER_ID%.ssh-proxy.internal:8080"
          protocol: http
          http:
            header:
              x-s8s-ssh-proxy-project-id: "%PROJECT_ID%"
              x-s8s-ssh-proxy-id: "%SSH_PROXY_SERVER_ID%"
              x-s8s-ssh-proxy-host: "%SSH_PROXY_SERVER_ID%.ssh-proxy.internal"
              x-s8s-ssh-proxy-api-port: "%SSH_PROXY_SERVER_API_PORT%"
              x-s8s-ssh-proxy-tunnel-port: "%SSH_PROXY_SERVER_TUNNEL_PORT%"
  - name: ssh-proxy
    addr: ":%SSH_PROXY_SERVER_TUNNEL_PORT%"
    admission: ssh-proxy-allowed-hosts
    handler:
      type: tunnel
      metadata:
        tunnel.direct: true
        ingress: ssh-proxy-ingress-rules
        postUp:
          - "echo 'SSH Proxy Server TUNNEL is available at: %SSH_PROXY_SERVER_ID%.ssh-proxy.internal:%SSH_PROXY_SERVER_TUNNEL_PORT%'"
    listener:
      type: tls

hosts:
  - name: well-known-hosts
    mappings:
      - ip: 127.0.0.1
        hostname: "%SSH_PROXY_SERVER_ID%.ssh-proxy.internal"
      - ip: 169.254.169.254
        hostname: metadata.google.internal

chains:
  - name: ssh-proxy-server-api-internal
    hops:
      - name: ssh-proxy-server-api-internal
        nodes:
          - name: ssh-proxy-server-api-internal-uds
            addr: /ssh_proxy_server_api.sock
            connector:
              type: unix
            dialer:
              type: unix

ingresses:
  - name: ssh-proxy-ingress-rules
    reload: 5s
    http:
      url: "http://127.0.0.1:8888/ingress-rules"
      timeout: 5s

admissions:
  - name: ssh-proxy-allowed-hosts
    whitelist: true
    matchers:
      - ::1
      - 127.0.0.1
      - 169.254.0.0/16
    reload: 5s
    http:
      url: "http://127.0.0.1:8888/allowed-hosts"
      timeout: 5s

tls:
  validity: 8760h
  commonName: "%SSH_PROXY_SERVER_ID%.ssh-proxy.internal"
  organization: "%PROJECT_ID%"
