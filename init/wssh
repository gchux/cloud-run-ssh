#!/usr/bin/env bash

source /cloud_run_ssh.env

if [[ "${SSH_PROXY_SERVER_ENABLED}" == "true" ]]; then
  # start tunnel with SSH Proxy Server
  /gost -D -C /tmp/ssh_proxy_client.yaml 2>&1 &
  export SSH_PROXY_CLIENT_PID=$!

  # register INGRESS with the SSH Proxy Server
  # renew INGRESS every x amount of seconds
  /poll_ssh_proxy_server ${SSH_PROXY_PING_INTERVAL:-60} POST &
  export SSH_PROXY_SERVER_POLL_PID=$!
fi

export USER_PASSWORD_B64=`printf "${USER_PASSWORD}" | basenc --base64url | tr -d '\n'`

SSH_SERVER_STATIC_PARAMS="hostname=localhost&port=2222&term=xterm-256color"
SSH_SERVER_TITLE="${PROJECT_ID}_${GCP_REGION}_${K_SERVICE}_${K_REVISION}"
SSH_SERVER_PARAMS="${SSH_SERVER_STATIC_PARAMS}&username=${USER_NAME}&title=${SSH_SERVER_TITLE}&password=${USER_PASSWORD_B64}"

echo "[SSH Server] - credentials: [user:${USER_NAME}][pass:${USER_PASSWORD}]"
echo "[SSH Server] - Cloud Run URL: ${SSH_SERVER_URL}?${SSH_SERVER_PARAMS}"
echo "[SSH Server] - Cloud Run proxy command: gcloud run services proxy ${K_SERVICE} --region=${GCP_REGION} --port=${WEBSSH_PORT}"
echo "[SSH Server] - Cloud Run proxied URL: http://localhost:${WEBSSH_PORT}?${SSH_SERVER_PARAMS}"

echo "[SSH Server] - project/region/service/revision/instnace/tunnel: ${PROJECT_ID} / ${GCP_REGION} / ${K_SERVICE} / ${K_REVISION} / ${INSTANCE_ID} / ${INSTANCE_UUID}"

ssh-keyscan -p 2222 127.0.0.1 2>/dev/null

trap 'kill -TERM $SSH_WEB_SERVER_PID' TERM INT
# web ssh terminal: https://github.com/huashengdun/webssh
wssh --address='0.0.0.0' --port=${WEBSSH_PORT} \
  --encoding='utf-8' --xheaders=True --debug=True \
  --origin='*' --policy=autoadd --log_to_stderr \
  --logging=debug --redirect=False --fbidhttp=False \
  --wpintvl=5 --maxconn=10 --xsrf=False &
export SSH_WEB_SERVER_PID=$!
echo "[INFO] – SSH web server started w/PID: ${SSH_WEB_SERVER_PID}"
wait ${SSH_WEB_SERVER_PID}
trap - TERM INT
wait ${SSH_WEB_SERVER_PID}
echo "[INFO] – SSH web server ( PID: ${SSH_WEB_SERVER_PID} ) exited"

if [[ "${SSH_PROXY_SERVER_ENABLED}" == "true" ]]; then
  kill -15 ${SSH_PROXY_SERVER_POLL_PID}
  kill -15 ${SSH_PROXY_CLIENT_PID}
  /poll_ssh_proxy_server 0 DELETE
fi
